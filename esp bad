local repo = 'https://raw.githubusercontent.com/wally-rblx/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({
    -- Set Center to true if you want the menu to appear in the center
    -- Set AutoShow to true if you want the menu to appear when it is created
    -- Position and Size are also valid options here
    -- but you do not need to define them unless you are changing them :)

    Title = 'HOKHUB',
    Center = true, 
    AutoShow = true,
})

-- You do not have to set your tabs & groups up this way, just a prefrence.
local Tabs = {
    -- Creates a new tab titled Main
    Main = Window:AddTab('Main'), 
    ['UI Settings'] = Window:AddTab('UI Settings'),
}

-- Groupbox and Tabbox inherit the same functions
-- except Tabboxes you have to call the functions on a tab (Tabbox:AddTab(name))
local LeftGroupBox = Tabs.Main:AddLeftGroupbox('Esp')

local MyButton = LeftGroupBox:AddButton('Rejoin', function()
    game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
end)
LeftGroupBox:AddToggle('EspBox', {
    Text = 'EspBox',
    Default = false, 
    Tooltip = 'This is a tooltip', 
})
LeftGroupBox:AddToggle('EspSkeleton', {
    Text = 'EspSkeleton',
    Default = false, 
    Tooltip = 'This is a tooltip', 
})
LeftGroupBox:AddToggle('EspHealth', {
    Text = 'EspHealth',
    Default = false, 
    Tooltip = 'This is a tooltip', 
})
local function my()
    for i, v in ipairs(workspace.Characters:GetChildren()) do
        if (v.Body.Head.Position - workspace.CurrentCamera.CFrame.p).magnitude < 1 then return v end 
    end
end

local function Team(x)
    for i, v in ipairs(game.Players.LocalPlayer.PlayerGui:GetChildren()) do 
        if v.Name == "NameGui" then 
            if v.Adornee:IsDescendantOf(x) then return true end    
        end
    end
end
local width = 3
local height = 5
Toggles.EspBox:OnChanged(function()
box =  Toggles.EspBox.Value 
end)
Toggles.EspSkeleton:OnChanged(function()
ske = Toggles.EspSkeleton.Value
end)
Toggles.EspHealth:OnChanged(function()
he = Toggles.EspHealth.Value 
end)
local LineList = {}
local Linee = {}
local text1 = {}
game:GetService("RunService").RenderStepped:Connect(function()
if box then
    --LineList = {}
    for i,v in pairs(LineList) do
        if v then
        v:Remove()
        end
    end
    LineList = {}
    for i,v in pairs(game:GetService("Workspace").Characters:GetChildren()) do
        if not Team(v) and v ~= my() then

        local pos = v.PrimaryPart.Position
        local ScreenSpacePos, IsOnScreen = game.Workspace.CurrentCamera:WorldToViewportPoint(pos)
        a = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Body.Head.CFrame:PointToWorldSpace(Vector3.new(width/2, 2/2, 0)))
        b = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Body.Head.CFrame:PointToWorldSpace(Vector3.new(-width/2, 2/2, 0)))
        c = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Body.Hips.CFrame:PointToWorldSpace(Vector3.new(-width/2, -height/1, 0)))
        d = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Body.Hips.CFrame:PointToWorldSpace(Vector3.new(width/2, -height/1, 0)))
        a = Vector2.new(a.X, a.Y)
        b = Vector2.new(b.X, b.Y)
        c = Vector2.new(c.X, c.Y)
        d = Vector2.new(d.X, d.Y)
            if IsOnScreen then
                local Line = Drawing.new("Quad")
                Line.Visible = true
                Line.PointA = a
                Line.PointB = b
                Line.PointC = c
                Line.PointD = d
                Line.Color = Color3.fromRGB(255, 255, 255)
                Line.Thickness = 2
                Line.Transparency = 1
                LineList[#LineList+1] = Line
            end
        end
        end
    
else
    for i,v in pairs(LineList) do
        v:Remove()
    end
        LineList = {}
end
--end)

--Toggles.EspSkeleton:OnChanged(function()
--ske = Toggles.EspSkeleton.Value
--end)
--local Linee = {}
--game:GetService("RunService").RenderStepped:Connect(function()
if ske then
		for i,v in pairs(Linee) do
			if v then
				v:Remove()
			end
		end
		Linee = {}
		for i,v in pairs(game:GetService("Workspace").Characters:GetChildren()) do
			if not Team(v) and v ~= my() then
				local pos = v.PrimaryPart.Position
				local ScreenSpacePos, IsOnScreen = game.Workspace.CurrentCamera:WorldToViewportPoint(pos)
				Head = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Body.Head.CFrame:PointToWorldSpace(Vector3.new(0, 0, 0)))
				Neck = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Body.Neck.CFrame:PointToWorldSpace(Vector3.new(0, 0, 0)))
				RA = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Body.RightArm.CFrame:PointToWorldSpace(Vector3.new(0, 0, 0)))
				LA = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Body.LeftArm.CFrame:PointToWorldSpace(Vector3.new(0, 0, 0)))
				Hips = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Body.Hips.CFrame:PointToWorldSpace(Vector3.new(0, 0, 0)))
				RL = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Body.RightLeg.CFrame:PointToWorldSpace(Vector3.new(0, 0, 0)))
				LL = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Body.LeftLeg.CFrame:PointToWorldSpace(Vector3.new(0, 0, 0)))
				RF = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Body.RightFoot.CFrame:PointToWorldSpace(Vector3.new(0, 0, 0)))
				LF = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Body.LeftFoot.CFrame:PointToWorldSpace(Vector3.new(0, 0, 0)))
				RH = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Body.RightHand.CFrame:PointToWorldSpace(Vector3.new(0, 0, 0)))
				LH = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Body.LeftHand.CFrame:PointToWorldSpace(Vector3.new(0, 0, 0)))
	
				Head = Vector2.new(Head.X, Head.Y)
				Neck = Vector2.new(Neck.X, Neck.Y)
				RA = Vector2.new(RA.X, RA.Y)
				LA = Vector2.new(LA.X, LA.Y)
				Hips = Vector2.new(Hips.X, Hips.Y)
				RL = Vector2.new(RL.X, RL.Y)
				LL = Vector2.new(LL.X,LL.Y)
				RF = Vector2.new(RF.X, RF.Y)
				LF = Vector2.new(LF.X,  LF.Y)
				RH = Vector2.new(RH.X,  RH.Y)
				LH = Vector2.new(LH.X,  LH.Y)
	
				if IsOnScreen then   
					local Line = Drawing.new("Line")
					Line.Visible = true
					Line.From = Head
					Line.To = Hips
					Line.Color = Color3.fromRGB(255, 0, 0)
					Line.Thickness = 2
					Line.Transparency = 1
					Linee[#Linee+1] = Line
	
					local Line1 = Drawing.new("Line")
					Line1.Visible = true
					Line1.From = Neck
					Line1.To = RA
					Line1.Color = Color3.fromRGB(255, 0, 0)
					Line1.Thickness = 2
					Line1.Transparency = 1
					Linee[#Linee+1] = Line1
	
					local Line2 = Drawing.new("Line")
					Line2.Visible = true
					Line2.From = Neck
					Line2.To = LA
					Line2.Color = Color3.fromRGB(255, 0, 0)
					Line2.Thickness = 2
					Line2.Transparency = 1
					Linee[#Linee+1] = Line2
	
					local Line3 = Drawing.new("Line")
					Line3.Visible = true
					Line3.From = Hips
					Line3.To = RL
					Line3.Color = Color3.fromRGB(255, 0, 0)
					Line3.Thickness = 2
					Line3.Transparency = 1
					Linee[#Linee+1] = Line3
	
					local Line4 = Drawing.new("Line")
					Line4.Visible = true
					Line4.From = Hips
					Line4.To = LL
					Line4.Color = Color3.fromRGB(255, 0, 0)
					Line4.Thickness = 2
					Line4.Transparency = 1
					Linee[#Linee+1] = Line4
	
					local Line5 = Drawing.new("Line")
					Line5.Visible = true
					Line5.From = RL
					Line5.To = RF
					Line5.Color = Color3.fromRGB(255, 0, 0)
					Line5.Thickness = 2
					Line5.Transparency = 1
					Linee[#Linee+1] = Line5
	
					local Line6 = Drawing.new("Line")
					Line6.Visible = true
					Line6.From = LL
					Line6.To = LF
					Line6.Color = Color3.fromRGB(255, 0, 0)
					Line6.Thickness = 2
					Line6.Transparency = 1
					Linee[#Linee+1] = Line6
	
					local Line7 = Drawing.new("Line")
					Line7.Visible = true
					Line7.From = RA
					Line7.To = RH
					Line7.Color = Color3.fromRGB(255, 0, 0)
					Line7.Thickness = 2
					Line7.Transparency = 1
					Linee[#Linee+1] = Line7
	
					local Line8 = Drawing.new("Line")
					Line8.Visible = true
					Line8.From = LA
					Line8.To = LH
					Line8.Color = Color3.fromRGB(255, 0, 0)
					Line8.Thickness = 2
					Line8.Transparency = 1
					Linee[#Linee+1] = Line8
	
				end
			end
		end
else
    for i,v in pairs(Linee) do
        v:Remove()
    end
		Linee = {}
end
--end)
--Toggles.EspHealth:OnChanged(function()
--he = Toggles.EspHealth.Value 
--end)
--local text1 = {}
--game:GetService("RunService").RenderStepped:Connect(function()
if he  then
            for i,v in pairs(text1) do
                if v then
                    v:Remove()
                end
            end
			text1 = {}
		for i,v in pairs(game:GetService("Workspace").Characters:GetChildren()) do
    if not Team(v) and v ~= my() then
        local pos = v.PrimaryPart.Position
        local ScreenSpacePos, IsOnScreen = game.Workspace.CurrentCamera:WorldToViewportPoint(pos)
        d = tostring(v.Health.Value)
    	a = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Body.Head.CFrame:PointToWorldSpace(Vector3.new(0, 2, 0)))
    	a = Vector2.new(a.X, a.Y)
    if IsOnScreen then
		local text = Drawing.new("Text")
		text.Visible =true
		text.Outline = true
		text.Size = 20
		text.Position = a
		text.OutlineColor = Color3.fromRGB(255, 0 ,0)
		text.Text = d
		text1[#text1+1] = text
	end
	end
	end
else
	for i,v in pairs(text1) do
		v:Remove()
	end
	text1 = {}
end
end)
local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')

MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'RightControl', NoUI = true, Text = 'Menu keybind' }) 

Library.ToggleKeybind = Options.MenuKeybind 


ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)


SaveManager:IgnoreThemeSettings() 


SaveManager:SetIgnoreIndexes({ 'MenuKeybind' }) 


ThemeManager:SetFolder('MyScriptHub')
SaveManager:SetFolder('MyScriptHub/specific-game')


SaveManager:BuildConfigSection(Tabs['UI Settings']) 


ThemeManager:ApplyToTab(Tabs['UI Settings'])
